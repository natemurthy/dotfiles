eval "$(/opt/homebrew/bin/brew shellenv)"

# =============================================================================================
# Source sub files
# =============================================================================================

source $HOME/.zsh/functions
source $HOME/.zsh/aliases


# =============================================================================================
# Visual stuff
# =============================================================================================

autoload colors; colors

if [[ x$WINDOW != x ]]
then
    SCREEN_NO="%B$WINDOW%b "
else
    SCREEN_NO=""
fi



# Terminal colorings
export CLICOLOR=1
export GREP_OPTIONS='--color=always'


# =============================================================================================
# PATH settings
# =============================================================================================

export PATH=$PATH:/usr/local/bin:/sbin:/usr/sbin

# Go
export GOPATH=$HOME/code
export PATH=$PATH:$GOPATH:/usr/local/go/bin
export PATH=$PATH:$(go env GOPATH)/bin

# Python 
export VERSE_DATALAND_PROJECT_DIR=$HOME/code/src/github.com/verse-inc/dataland
export PATH=$PATH:$VERSE_DATALAND_PROJECT_DIR/cli
export PYTHONPATH=$VERSE_DATALAND_PROJECT_DIR/lib
export PYTHONPATH=$PYTHONPATH:$VERSE_DATALAND_PROJECT_DIR/apps/server-analytics-worker
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH:"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
pyenv activate verse-dev-3.11.2

# Node
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pnpm
export PNPM_HOME="/Users/nathan/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end


# =============================================================================================
# other plugins
# =============================================================================================

#bindkey -M menuselect '^o' accept-and-infer-next-history

bindkey "^[[A" history-search-backward
bindkey "^[[B" history-search-forward

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# These are installed using homebrew
source /opt/homebrew/opt/zsh-history-substring-search/share/zsh-history-substring-search/zsh-history-substring-search.zsh
source /opt/homebrew/opt/zsh-syntax-highlighting/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

#test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# fuzzy find is good to have
export FZF_COMPLETION_TRIGGER='``'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# autojump
[ -f /opt/homebrew/opt/autojump/etc/profile.d/autojump.sh ] && . /opt/homebrew/opt/autojump/etc/profile.d/autojump.sh

# SSH agent
SSHAGENT='/usr/bin/ssh-agent'
SSHAGENTARGS='-s'
if [ -z "$SSH_AUTH_SOCK" -a -x "$SSHAGENT" ]; then
    eval `$SSHAGENT $SSHAGENTARGS` > /dev/null
    trap "kill $SSH_AGENT_PID" 0
fi



#########################################
# TODO: figure out all this stuff below #
# #######################################
#
# Input stuff.

bindkey -e

# History stuff.

setopt HIST_VERIFY
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_DUPS

HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh-history

# . /usr/local/etc/profile.d/z.sh

# Directory stuff.

setopt AUTO_NAME_DIRS

# Speed stuff.

#setopt NO_BEEP
setopt AUTO_CD
setopt MULTIOS
setopt CDABLEVARS

bindkey '\ew' kill-region

bindkey -s '\el' "ls\n"
bindkey -s '\e.' "..\n"

# Shitty bloat

autoload -U incremental-complete-word
zle -N incremental-complete-word
bindkey "^Xi" incremental-complete-word ## C-x-i

#setopt EXTENDED_GLOB
setopt noautomenu
setopt COMPLETE_IN_WORD
setopt ALWAYS_TO_END

unsetopt flowcontrol

WORDCHARS=''

#autoload -U compinit
#compinit

#zmodload -i zsh/complist

unsetopt MENU_COMPLETE
setopt AUTO_MENU


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/nathan/code/src/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/nathan/code/src/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/nathan/code/src/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/nathan/code/src/google-cloud-sdk/completion.zsh.inc'; fi
